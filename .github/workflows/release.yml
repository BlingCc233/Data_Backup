# .github/workflows/release.yml

name: Release Wails App

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    # =========================================================
    # 关键修复: 为此 Job 授予写入权限，以允许 release-action 创建 Release
    permissions:
      contents: write
    # =========================================================

    strategy:
      matrix:
        include:
          # Linux build
          - os: ubuntu-latest
            platform: linux
            arch: amd64
            asset_name_suffix: linux-amd64
          # Windows build
          - os: windows-latest
            platform: windows
            arch: amd64
            asset_name_suffix: windows-amd64.exe
          # macOS build for Apple Silicon (arm64)
          - os: macos-latest
            platform: darwin
            arch: arm64
            asset_name_suffix: darwin-arm64.zip

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: ./go-backup-app

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache-dependency-path: go-backup-app/go.sum

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache-dependency-path: go-backup-app/frontend/package-lock.json

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev
          sudo apt-get install -y libwebkit2gtk-4.0-dev || sudo apt-get install -y libwebkit2gtk-4.1-dev

      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install

      - name: Set Environment Variables
        shell: bash
        run: |
          PROJECT_NAME=$(jq -r .name wails.json)
          echo "PROJECT_NAME=${PROJECT_NAME}" >> $GITHUB_ENV
          
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          
          echo "ASSET_NAME=${PROJECT_NAME}-${VERSION}-${{ matrix.asset_name_suffix }}" >> $GITHUB_ENV
          echo "BINARY_PATH=build/bin/${PROJECT_NAME}" >> $GITHUB_ENV

      - name: Build Wails Application
        run: wails build -platform ${{ matrix.platform }} -ldflags="-s -w"

      - name: Package Asset
        shell: bash
        run: |
          if [ "${{ matrix.os }}" == "macos-latest" ]; then
            zip -r "${{ env.ASSET_NAME }}" "build/bin/"*.app
          else
            mv "${{ env.BINARY_PATH}}$( [ "${{ matrix.os }}" == "windows-latest" ] && echo ".exe" )" "${{ env.ASSET_NAME }}"
          fi

      - name: Create Release and Upload Asset
        uses: ncipollo/release-action@v1
        with:
          artifacts: "go-backup-app/${{ env.ASSET_NAME }}"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          allowUpdates: true